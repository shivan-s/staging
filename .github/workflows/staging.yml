name: Staging
on: 
  push: 
    branches:
      - main
  pull_request:
    branches:
      - staging
    types:
     - closed

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  update-staging-branch:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    if: ${{ github.ref == 'refs/heads/main' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Create staging branch if not available
        continue-on-error: true
        run: |
          git fetch origin
          git checkout -b staging origin/main

      - name: Rebase staging branch with main and update
        run: |
          git fetch origin
          git checkout staging
          git rebase origin/main
          git config --global user.name "${{ env.CI_COMMIT_AUTHOR }}"
          git config --global user.email "username@users.noreply.github.com"
          git push origin HEAD --force-with-lease

  pr-into-staging:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    if: github.event.pull_request.merged
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Create STAGING label if not available
        run: |
          gh label create STAGING --description "Staging" --color EEEEEE --force

      - name: Create staging PR if not available
        continue-on-error: true
        run: | 
          git fetch origin
          git checkout staging
          gh pr create --title="Staging $(date +'%Y-%m-%d')" --body="Summary:" -l STAGING

      - name: Update the PR
        run: |
          body="$(gh pr view ${{ github.event.pull_request.number }} --json body | jq -r '.body')"

          declare -a issues=($(gh pr view ${{ github.event.pull_request.number }} --json closingIssuesReferences | jq '[.[][].number]' | tr -d '[],"'))
          if [ ${#issues} -gt 0 ]; then
          for issue in ${issues[@]}; do
            body="${body}\n- Closes #${issue} (PR #${{ github.event.pull_request.number }})"
          done
          else
            body="${body}\n - PR #${{ github.event.pull_request.number }}"
          fi
          gh pr edit --body="${body}"
